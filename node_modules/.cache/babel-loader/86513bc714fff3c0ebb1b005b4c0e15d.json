{"ast":null,"code":"var _jsxFileName = \"/Users/mfarrel/Documents/Work/Allo Bank/ReactJS/react-blog/src/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const {\n    name\n  } = useParams();\n  const [active, setActive] = useState(false);\n  const [unactive, setUnActive] = useState(false);\n  const [likeCount, setLikeCount] = useState(50);\n  const [dislikeCount, setDislikeCount] = useState(25);\n  const [activeBtn, setActiveBtn] = useState(\"none\");\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  const handleUnClick = () => {\n    setUnActive(!unactive);\n  };\n\n  useEffect(() => {\n    let uri = \"posts/\";\n    if (postId) uri += postId;\n    if (name) uri += \"author/\" + name;\n    fetch(props.apiUrl + uri).then(response => response.json()).then(response => {\n      setPosts(response);\n    });\n  }, [postId, name]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.resume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${activeBtn === \"like\" ? \"like-active\" : \"\"}`,\n            onClick: handleLikeClick,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-rounded\",\n              children: \"thumb_up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), \"Like \", likeCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${activeBtn === \"dislike\" ? \"dislike-active\" : \"\"}`,\n            onClick: handleDisikeClick,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-rounded\",\n              children: \"thumb_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), \"Dislike \", dislikeCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Related Links\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"alt\",\n        children: post.relatedlinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: link\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, post._id.$oid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"+mOLbrLe4eto0fb0N1tfmPOgkeA=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/mfarrel/Documents/Work/Allo Bank/ReactJS/react-blog/src/Posts.js"],"names":["useState","useEffect","useParams","Link","Posts","props","posts","setPosts","postId","name","active","setActive","unactive","setUnActive","likeCount","setLikeCount","dislikeCount","setDislikeCount","activeBtn","setActiveBtn","handleClick","handleUnClick","uri","fetch","apiUrl","then","response","json","map","post","title","resume","text","handleLikeClick","handleDisikeClick","relatedlinks","link","index","tags","tag","author","_id","$oid"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Posts(props) {\n  const [posts, setPosts] = useState([]);\n  const { postId } = useParams();\n  const { name } = useParams();\n  const [active, setActive] = useState(false);\n  const [unactive, setUnActive] = useState(false);\n\n  const [likeCount, setLikeCount] = useState(50);\n  const [dislikeCount, setDislikeCount] = useState(25);\n\n  const [activeBtn, setActiveBtn] = useState(\"none\");\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  const handleUnClick = () => {\n    setUnActive(!unactive);\n  };\n\n  useEffect(() => {\n    let uri = \"posts/\";\n    if (postId) uri += postId;\n    if (name) uri += \"author/\" + name;\n\n    fetch(props.apiUrl + uri)\n      .then((response) => response.json())\n      .then((response) => {\n        setPosts(response);\n      });\n  }, [postId, name]);\n\n  return (\n    <span key={name}>\n      {posts.map((post) => (\n        <section key={post._id.$oid}>\n          <header className=\"main\">\n            <h1>{post.title}</h1>\n          </header>\n          <h3>{post.resume}</h3>\n          <p>{post.text}</p>\n          <div className=\"container\">\n            <div className=\"btn-container\">\n              <button\n                className={`btn ${activeBtn === \"like\" ? \"like-active\" : \"\"}`}\n                onClick={handleLikeClick}\n              >\n                <span className=\"material-symbols-rounded\">thumb_up</span>\n                Like {likeCount}\n              </button>\n\n              <button\n                className={`btn ${activeBtn === \"dislike\" ? \"dislike-active\" : \"\"}`}\n                onClick={handleDisikeClick}\n              >\n                <span className=\"material-symbols-rounded\">thumb_down</span>\n                Dislike {dislikeCount}\n              </button>\n            </div>\n          </div>\n          <h4>Related Links</h4>\n          <ul className=\"alt\">\n            {post.relatedlinks.map((link, index) => (\n              <li key={index}>{link}</li>\n            ))}\n          </ul>\n          <h4>Tags</h4>\n          <ul>\n            {post.tags.map((tag, index) => (\n              <li key={index}>{tag}</li>\n            ))}\n          </ul>\n          <h4>Author</h4>\n          <p>{post.author}</p>\n        </section>\n      ))}\n      <p>\n        <Link to=\"/\">Back to Home Page</Link>\n      </p>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}