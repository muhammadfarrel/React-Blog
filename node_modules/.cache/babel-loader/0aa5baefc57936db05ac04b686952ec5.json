{"ast":null,"code":"var _jsxFileName = \"/Users/mfarrel/Documents/Work/Allo Bank/ReactJS/react-blog/src/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const {\n    name\n  } = useParams(); // const [isActive, setIsActive] = useState(false);\n\n  const [active, setActive] = useState(false); // const handleClick = () => {\n  //   // 👇️ toggle\n  //   setIsActive(current => !current);\n  //   // 👇️ or set to true\n  //   // setIsActive(true);\n  // };\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  useEffect(() => {\n    let uri = \"posts/\";\n    if (postId) uri += postId;\n    if (name) uri += \"author/\" + name;\n    fetch(props.apiUrl + uri).then(response => response.json()).then(response => {\n      setPosts(response);\n    });\n  }, [postId, name]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.resume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"thumbsUp\" // style={{\n        //   backgroundColor: isActive ? 'salmon' : '',\n        //   color: isActive ? 'white' : '',\n        // }}\n        ,\n        style: {\n          backgroundColor: active ? \"salmon\" : \"white\"\n        },\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-thumbs-up\",\n          style: {\n            color: active ? \"salmon\" : \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"thumbsDown\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Related Links\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"alt\",\n        children: post.relatedlinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: link\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, post._id.$oid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"4O+0sKCRprSh/DI82ZkP8/P48J4=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/mfarrel/Documents/Work/Allo Bank/ReactJS/react-blog/src/Posts.js"],"names":["useState","useEffect","useParams","Link","Posts","props","posts","setPosts","postId","name","active","setActive","handleClick","uri","fetch","apiUrl","then","response","json","map","post","title","resume","text","backgroundColor","color","relatedlinks","link","index","tags","tag","author","_id","$oid"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Posts(props) {\n  const [posts, setPosts] = useState([]);\n  const { postId } = useParams();\n  const { name } = useParams();\n  // const [isActive, setIsActive] = useState(false);\n  const [active, setActive] = useState(false);\n\n  // const handleClick = () => {\n  //   // 👇️ toggle\n  //   setIsActive(current => !current);\n\n  //   // 👇️ or set to true\n  //   // setIsActive(true);\n  // };\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  useEffect(() => {\n    let uri = \"posts/\";\n    if (postId) uri += postId;\n    if (name) uri += \"author/\" + name;\n\n    fetch(props.apiUrl + uri)\n      .then((response) => response.json())\n      .then((response) => {\n        setPosts(response);\n      });\n  }, [postId, name]);\n\n  return (\n    <span key={name}>\n      {posts.map((post) => (\n        <section key={post._id.$oid}>\n          <header className=\"main\">\n            <h1>{post.title}</h1>\n          </header>\n          <h3>{post.resume}</h3>\n          <p>{post.text}</p>\n          <button class=\"thumbsUp\"\n            // style={{\n            //   backgroundColor: isActive ? 'salmon' : '',\n            //   color: isActive ? 'white' : '',\n            // }}\n            style={{ backgroundColor: active ? \"salmon\" : \"white\" }}\n            onClick={handleClick}>\n            <i class=\"fa fa-thumbs-up\" style={{ color: active ? \"salmon\" : \"white\" }}></i>\n          </button>\n          <button class=\"thumbsDown\">\n            <i class=\"fa fa-thumbs-down\"></i>\n          </button>\n          <h4>Related Links</h4>\n          <ul className=\"alt\">\n            {post.relatedlinks.map((link, index) => (\n              <li key={index}>{link}</li>\n            ))}\n          </ul>\n          <h4>Tags</h4>\n          <ul>\n            {post.tags.map((tag, index) => (\n              <li key={index}>{tag}</li>\n            ))}\n          </ul>\n          <h4>Author</h4>\n          <p>{post.author}</p>\n        </section>\n      ))}\n      <p>\n        <Link to=\"/\">Back to Home Page</Link>\n      </p>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}